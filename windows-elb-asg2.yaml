AWSTemplateFormatVersion: "2010-09-09"
Description: Standup Windows instance with ELB and ASG
Parameters:
  ELBSubnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Default: subnet-4630ea22
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC) for your ELB
  ELBSecurityGroups:
    Type: 'List<AWS::EC2::SecurityGroup::Id>'
    Default: sg-b5dc32d1
    Description: The list of Security Groups used by your ELB
  Ec2Subnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Default: subnet-9c37edf8
    Description: EC2 Instance Subnets
  Ec2SecurityGroups:
    Type: 'List<AWS::EC2::SecurityGroup::Id>'
    Default: sg-b5dc32d1
    Description: Security Groups for EC2 instance 
  AmiId:
    Type: String
    Default: ami-69099208
    Description: Amazon Machine Image ID
  EC2KeyPair: 
    Type: String
    Description: Provides the name of the Amazon EC2 key pair
  EC2Profile: 
    Type: String
    Default: DevOps
    Description: The profile/role for this EC2 instance
  EC2Script:
    Type: String
    Default: "Touchpoints.ps1"
    Description: Server initialization Powershell script for UserData
Resources:
  DmzELB:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:      
      HealthCheck:
        HealthyThreshold: '3'
        Interval: '10'
        Target: HTTP:80/
        Timeout: '5'
        UnhealthyThreshold: '5'
      Listeners:
      - LoadBalancerPort: '80'
        InstancePort: '80'
        Protocol: HTTP
      Scheme: internal
      #Scheme: internet-facing
      SecurityGroups: !Ref ELBSecurityGroups
      Subnets: !Ref ELBSubnets
      Tags:
      - Key: Name
        Value: DMZ ELB
  DmzLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      IamInstanceProfile: !Ref EC2Profile
      InstanceType: t2.micro
      ImageId: !Ref AmiId
      KeyName: !Ref EC2KeyPair
      SecurityGroups: !Ref Ec2SecurityGroups
      UserData:
        "Fn::Base64":
          !Sub |
          <powershell>

              $NCCT_Template_Bucket = "ncct-cloudformation-templates";
              $NCCT_Scripts_Dir = "UserdataScripts";
              $SetRegion = "us-gov-west-1";

             Read-S3Object `
               -BucketName $NCCT_Template_Bucket `
               -Key $NCCT_Scripts_Dir/userdata-powershell-gov-ec2.ps1 `
               -File $env:Temp\caciuserdata.ps1 `
               -Region $SetRegion

             & $env:Temp\caciuserdata.ps1

              Read-S3Object `
               -BucketName $NCCT_Template_Bucket `
               -Key $NCCT_Scripts_Dir/cli-install.ps1 `Read-S3Object `
               -File $env:Temp\cli-install.ps1 `
               -Region $SetRegion
               
             & $env:Temp\cli-install.ps1

              Read-S3Object `
              -BucketName $NCCT_Template_Bucket `
              -Key $NCCT_Scripts_Dir/${EC2Script} `Ec2SecurityGroups
              -File $env:Temp\${EC2Script} `
              -Region $SetRegion
              
            & $env:Temp\${EC2Script} $env:Temp\foo.txt

          </powershell>
  DmzASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref DmzLaunchConfiguration
      DesiredCapacity: '1'
      HealthCheckGracePeriod: 300
      LoadBalancerNames:
      - Ref: DmzELB
      MinSize: '1'
      MaxSize: '1'
      VPCZoneIdentifier: !Ref Ec2Subnets
      #HealthCheckType: "ELB"
      HealthCheckType: "EC2"
      Tags:
        - Key: Name
          Value: DMZ AutoScaling Group
          PropagateAtLaunch: "true"

Outputs:
  URL:
    Description: URL of the sample website
    Value: !Join ['', ['http://', !GetAtt [DmzELB, DNSName]]]
