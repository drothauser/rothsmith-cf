AWSTemplateFormatVersion: "2010-09-09"
Description: Standup a Windows instance stack for the purpose of generating a NCCT AMI using AWS VM Import Export
Parameters:
  AmiId:
    Type: String
    Default: ami-066663db63b3aa675
    Description: Amazon Machine Image ID
  Ec2Subnet:
    Type: AWS::EC2::Subnet::Id
    #Default: subnet-9c37edf8
    Description: EC2 Instance Subnet
  Ec2SecurityGroups:
    Type: 'List<AWS::EC2::SecurityGroup::Id>'
    Default: sg-c6f9e6ba
    Description: Security Groups for EC2 instance 
  Ec2KeyPair: 
    Type: String
    Description: Provides the name of the Amazon EC2 key pair
  Ec2Profile: 
    Type: String
    Default: DevOps
    Description: The profile/role for this EC2 instance
  Ec2Name:
    Type: String
    Description: Name of the EC2 instance
  Ec2Owner:
    Type: String
    Description: Email address of the person owning this EC2 instance
  Ec2Desc:
    Type: String
    Description: Description of this EC2 instance
  DirectoryId:
    Type: String
    Default: d-906718f81f 
    Description: Active DirectoryId. Eg. d-12345679a
  Domain:
    Type: String
    Default: rothsmith.net
    Description: Windows domain name
  DomainUser:
    Type: String
    Default: Administrator
    Description: Windows domain administrator user
  DomainPassword:
    Type: String
    Default: Password12345!
    Description: Domain administrator user password
  DomainPrimaryDNS:
    Type: String
    AllowedPattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
    ConstraintDescription: Valid IPv4 IP address
    Default: "172.31.66.94"
    Description: IP address of the domain's primary name server
  DomainSecondaryDNS:
    Type: String
    AllowedPattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
    ConstraintDescription: Valid IPv4 IP address
    Default: "172.31.31.154"
    Description: IP address of the domain's secondary name server
Resources:
  SsmDomainDocument:   
    Type: 'AWS::SSM::Document'
    Properties:
      Content:
        schemaVersion: '1.2'
        description: Join instances to an AWS Directory Service domain.
        parameters:
          directoryId:
            type: String
            description: (Required) The ID of the AWS Directory Service directory.
          directoryName:
            type: String
            description: >-
              (Required) The name of the directory; for example,
              test.example.com
          dnsIpAddresses:
            type: StringList
            default: []
            description: >-
              (Optional) The IP addresses of the DNS servers in the directory.
              Required when DHCP is not configured. Learn more at
              http://docs.aws.amazon.com/directoryservice/latest/simple-ad/join_get_dns_addresses.html
            allowedPattern: >-
              ((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)
        runtimeConfig:
          'aws:domainJoin':
            properties:
              directoryId: '{{ directoryId }}'
              directoryName: '{{ directoryName }}'
              dnsIpAddresses: '{{ dnsIpAddresses }}'
  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      SsmAssociations:
        - DocumentName: !Ref SsmDomainDocument
          AssociationParameters:
            - Key: directoryId
              Value:
                - !Ref DirectoryId
            - Key: directoryName
              Value:
                - !Ref Domain
            - Key: dnsIpAddresses
              Value:
                - !Ref DomainPrimaryDNS
                - !Ref DomainSecondaryDNS
      BlockDeviceMappings:
        -
          DeviceName: "/dev/sda1"
          Ebs:
            VolumeSize: 40
            VolumeType: gp2
      IamInstanceProfile: !Ref Ec2Profile
      InstanceType: m4.xlarge
      ImageId: !Ref AmiId
      KeyName: !Ref Ec2KeyPair
      SecurityGroupIds: !Ref Ec2SecurityGroups
      SubnetId: !Ref Ec2Subnet
      Tags:
        - Key: Name
          Value: !Ref Ec2Name
        - Key: Owner
          Value: !Ref Ec2Owner
        - Key: Description
          Value: !Ref Ec2Desc
      UserData:
        "Fn::Base64":
          !Sub |
            <script>
              echo "${AWS::StackName} - ${AWS::Region}"
              REM C:\PROGRA~1\Amazon\cfn-bootstrap\cfn-init.exe -v -s ${AWS::StackName} -r Ec2Instance --region=${AWS::Region}
              REM call aws s3 cp s3://ncct-scripts/ C:\Scripts --recursive --exclude "*" --include "dom*.bat" --region ${AWS::Region}
              REM cd \Scripts
              REM call domjoin.bat ${Domain} ${DomainUser} ${DomainPassword} ${DomainPrimaryDNS} ${DomainSecondaryDNS}
              REM shutdown /r /t 30
            </script>

            
          