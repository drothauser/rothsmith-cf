AWSTemplateFormatVersion: "2010-09-09"
Description: NCCT service resource including load balancer, autoscaling resources
Parameters:
  ConfigFile:
    Type: String
    Description: Configuration XML file used by ncctconfig.ps1
  ElbSNs:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC) for your ELB
  ElbSGs:
    Type: 'List<AWS::EC2::SecurityGroup::Id>'
    Description: The list of Security Groups used by your ELB
  Ec2SNs:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: EC2 Instance Subnets
  Ec2SGs:
    Type: 'List<AWS::EC2::SecurityGroup::Id>'
    Description: Security Groups for EC2 instance 
  AmiId:
    Type: String
    Description: Amazon Machine Image ID
  Ec2Role:
    Type: String
    Description: The EC2 Role/Profile name
  Ec2Type:
    Type: String
    Description: The EC2 Instance Type
  Ec2Name:
    Type: String
    Description: Tag name for the EC2 instance    
  Ec2Owner:
    Type: String    
    Description: The administrator of this instance's email address
  Ec2Desc:
    Type: String
    Description: EC2 instance's description
  Ec2KeyPair: 
    Type: String
    Description: Provides the name of the Amazon EC2 key pair
  Scaling:
    Type: CommaDelimitedList
    Description: Scaling dimensions of the Autoscaling Group - min, max, desired
  Protocol:
    Type: String
    Default: HTTP
    Description: Protocol used by the load balancer and EC2 instance
  ElbPort:
    Type: String
    Default: '80'
    Description: TCP port that the load balancer listens on for incoming traffic
  Ec2Port:
    Type: String
    Default: '80'
    Description: TCP port that the application deployed on the EC2 instance listens on
  Facing:
    Type: String
    Default: public
    AllowedValues:
      - public
      - private
    Description: Will this service be public facing or in a private network layer
Conditions: 
  ProtocolHTTP: !Equals [!Ref Protocol, "HTTP"]
Mappings:
  LayerMap:
    public:
      scheme: internet-facing
    private:
      scheme: internal
Resources:
  LoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:      
      HealthCheck:
        HealthyThreshold: '3'
        Interval: '10'
        Target: !Join ["", [!Ref Protocol, ":", !Ref Ec2Port, !If [ProtocolHTTP, "/", ""]]]
        #Target: !Join ["", [!Ref Protocol, ":", !Ref Ec2Port]]
        Timeout: '5'
        UnhealthyThreshold: '5'
      Listeners:
      - LoadBalancerPort: !Ref ElbPort
        InstancePort: !Ref Ec2Port
        Protocol: !Ref Protocol
      Scheme: !FindInMap
        - LayerMap
        - !Ref Facing
        - scheme
      SecurityGroups: !Ref ElbSGs
      Subnets: !Ref ElbSNs
      Tags:
      - Key: Name
        Value: !Ref Ec2Name
  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      IamInstanceProfile: !Ref Ec2Role
      InstanceType: !Ref Ec2Type
      ImageId: !Ref AmiId
      KeyName: !Ref Ec2KeyPair
      SecurityGroups: !Ref Ec2SGs
      UserData:
        "Fn::Base64":
          !Sub |
          <powershell>

            $NCCT_Template_Bucket = "ncct-cloudformation-templates";
            $NCCT_Scripts_Dir = "UserdataScripts";
            $Region = "us-gov-west-1";
            $Script = "NcctConfig.ps1"

            Function LaunchConfigScript ([string]$ConfigFile)
            {
              Read-S3Object `
                -BucketName $NCCT_Template_Bucket `
                -Key $NCCT_Scripts_Dir/$Script `
                -File $env:Temp\$Script `
                -Region $Region
              & $env:Temp\$Script ${ConfigFile}
            }

            # LaunchConfigScript ${ConfigFile}
            Write-Host "LaunchConfigScript ${ConfigFile}"

          </powershell>
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref LaunchConfiguration
      DesiredCapacity: !Select [ "2", !Ref Scaling ]
      HealthCheckGracePeriod: 300
      LoadBalancerNames:
      - Ref: LoadBalancer
      MinSize: !Select [ "0", !Ref Scaling ]
      MaxSize: !Select [ "1", !Ref Scaling ]
      VPCZoneIdentifier: !Ref Ec2SNs
      HealthCheckType: "ELB"
      Tags:
        - Key: Name
          Value: !Ref Ec2Name
          PropagateAtLaunch: "true"
        - Key: Owner
          Value: !Ref Ec2Owner
          PropagateAtLaunch: "true"
        - Key: Description
          Value: !Ref Ec2Desc
          PropagateAtLaunch: "true"
Outputs:
  URL:
    Description: URL of the sample website
    Value: !Join ['', ['http://', !GetAtt [LoadBalancer, DNSName]]]