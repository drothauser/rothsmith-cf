AWSTemplateFormatVersion: "2010-09-09"
Description: NCCT Stack
Parameters:
  ElbSNs:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC) for your ELB
  ElbSGs:
    Type: 'List<AWS::EC2::SecurityGroup::Id>'
    Description: The list of Security Groups used by your ELB
  Ec2KeyPair: 
    Type: String
    Description: Provides the name of the EC2 key pair
  Ec2SNs:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: EC2 Instance Subnets
  Ec2SGs:
    Type: 'List<AWS::EC2::SecurityGroup::Id>'
    Description: Security Groups for EC2 instance 
  S3Bucket:
    Type: String
    Default: ncct-cloudformation-templates
    Description: The S3 bucket containing CloudFormation templates
  Server:
    Type: String
    Default: ALL
    Description: NCCT Servers
    AllowedValues: 
      - ALL
      - DMS
      - DB
      - SMS
      - EXMB
      - ENMB
      - EXMB
      - SVC
      - SVCA
      - FUS
      - BIN
      - DBMS
      - SMC1
      - BSIM
      - GSIM    
Mappings:
  NcctMap: 
    BIN: 
      ami: "ami-dddfb8bc"
      role: "DevOps"
      scaling: "1,1,1"
      type: "t2.micro"
      name: BIN
      owner: douglas.rothauser@caci.com
      description: Binary Adapter Server
      protocol: TCP
      elbPort: '3389'
      ec2Port: '3389'
      configFile: 'binconfig.xml'
    BSIM: 
      ami: "ami-dddfb8bc"
      role: "DevOps"
      scaling: "1,1,1"
      type: "t2.micro"
      name: Fusion
      owner: douglas.rothauser@caci.com
      description: BSIM Server
      protocol: TCP
      elbPort: '3389'
      ec2Port: '3389'
      configFile: 'bsimconfig.xml'
Conditions: 
  CreateSMS: !Or [!Equals [ !Ref Server, SMS ], !Equals [ !Ref Server, ALL ]]
  CreateDMS: !Or [!Equals [ !Ref Server, DMS ], !Equals [ !Ref Server, ALL ]]
  CreateDB: !Or [!Equals [ !Ref Server, DB ], !Equals [ !Ref Server, ALL ]]
  CreateINDB: !Or [!Equals [ !Ref Server, INDB ], !Equals [ !Ref Server, ALL ]]
  CreateENDB: !Or [!Equals [ !Ref Server, ENDB ], !Equals [ !Ref Server, ALL ]]
  CreateEXDB: !Or [!Equals [ !Ref Server, EXDB ], !Equals [ !Ref Server, ALL ]]
  CreateSVC: !Or [!Equals [ !Ref Server, SVC ], !Equals [ !Ref Server, ALL ]]
  CreateSVCA: !Or [!Equals [ !Ref Server, SVCA ], !Equals [ !Ref Server, ALL ]]
  CreateFUS: !Or [!Equals [ !Ref Server, FUS ], !Equals [ !Ref Server, ALL ]]
  CreateBIN: !Or [!Equals [ !Ref Server, BIN ], !Equals [ !Ref Server, ALL ]]
  CreateDBMS: !Or [!Equals [ !Ref Server, DBMS ], !Equals [ !Ref Server, ALL ]]
  CreateBSIM: !Or [!Equals [ !Ref Server, BSIM ], !Equals [ !Ref Server, ALL ]]
  CreateDMBS: !Or [!Equals [ !Ref Server, DMBS ], !Equals [ !Ref Server, ALL ]]
  CreateDMS: !Or [!Equals [ !Ref Server, DMS ], !Equals [ !Ref Server, ALL ]]
  CreateSMC1: !Or [!Equals [ !Ref Server, SMC1 ], !Equals [ !Ref Server, ALL ]]
  CreateGSIM: !Or [!Equals [ !Ref Server, GSIM ], !Equals [ !Ref Server, ALL ]]  
Resources:
  SMSLoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://s3.us-gov-west-1.amazonaws.com/'
          - !Ref S3Bucket
          - '/ncct-elb.yaml'
      Parameters:
        ElbSNs: !Join [ ",", !Ref ElbSNs]
        ElbSGs: !Join [ ",", !Ref ElbSGs]
        Facing: private
        Name: !FindInMap [NcctMap, SMS, name]
        Owner: !FindInMap [NcctMap, SMS, owner]
        Desc: !FindInMap [NcctMap, SMS, description]
        Scaling: !FindInMap [NcctMap, SMS, scaling]
        ElbPort: !FindInMap [NcctMap, SMS, elbPort]
        Ec2Port: !FindInMap [NcctMap, SMS, ec2Port]
        Protocol: !FindInMap [NcctMap, SMS, protocol]
  DMSLoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://s3.us-gov-west-1.amazonaws.com/'
          - !Ref S3Bucket
          - '/ncct-elb.yaml'
      Parameters:
        ElbSNs: !Join [ ",", !Ref ElbSNs]
        ElbSGs: !Join [ ",", !Ref ElbSGs]
        Facing: private
        Name: !FindInMap [NcctMap, DMS, name]
        Owner: !FindInMap [NcctMap, DMS, owner]
        Desc: !FindInMap [NcctMap, DMS, description]
        Scaling: !FindInMap [NcctMap, DMS, scaling]
        ElbPort: !FindInMap [NcctMap, DMS, elbPort]
        Ec2Port: !FindInMap [NcctMap, DMS, ec2Port]
        Protocol: !FindInMap [NcctMap, DMS, protocol]
  BINServer:
    Type: AWS::CloudFormation::Stack
    Condition: CreateBIN
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://s3.us-gov-west-1.amazonaws.com/'
          - !Ref S3Bucket
          - '/ncct-service.yaml'
      Parameters:
        ElbSNs: !Join [ ",", !Ref ElbSNs]
        ElbSGs: !Join [ ",", !Ref ElbSGs]
        Ec2SNs: !Join [ ",", !Ref Ec2SNs]
        Ec2SGs: !Join [ ",", !Ref Ec2SGs]
        Ec2KeyPair: !Ref Ec2KeyPair
        Facing: private
        AmiId: !FindInMap [NcctMap, BIN, ami]
        Ec2Role: !FindInMap [NcctMap, BIN, role]
        Ec2Type: !FindInMap [NcctMap, BIN, type]
        Ec2Name: !FindInMap [NcctMap, BIN, name]
        Ec2Owner: !FindInMap [NcctMap, BIN, owner]
        Ec2Desc: !FindInMap [NcctMap, BIN, description]
        Scaling: !FindInMap [NcctMap, BIN, scaling]
        ElbPort: !FindInMap [NcctMap, BIN, elbPort]
        Ec2Port: !FindInMap [NcctMap, BIN, ec2Port]
        Protocol: !FindInMap [NcctMap, BIN, protocol]
        ConfigFile: !FindInMap [NcctMap, BIN, configFile]
  BSIMServer:
    Type: AWS::CloudFormation::Stack
    Condition: CreateBIN
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://s3.us-gov-west-1.amazonaws.com/'
          - !Ref S3Bucket
          - '/ncct-service.yaml'
      Parameters:
        ElbSNs: !Join [ ",", !Ref ElbSNs]
        ElbSGs: !Join [ ",", !Ref ElbSGs]
        Ec2SNs: !Join [ ",", !Ref Ec2SNs]
        Ec2SGs: !Join [ ",", !Ref Ec2SGs]
        Ec2KeyPair: !Ref Ec2KeyPair
        Facing: private
        AmiId: !FindInMap [NcctMap, BSIM, ami]
        Ec2Role: !FindInMap [NcctMap, BSIM, role]
        Ec2Type: !FindInMap [NcctMap, BSIM, type]
        Ec2Name: !FindInMap [NcctMap, BSIM, name]
        Ec2Owner: !FindInMap [NcctMap, BSIM, owner]
        Ec2Desc: !FindInMap [NcctMap, BSIM, description]
        Scaling: !FindInMap [NcctMap, BSIM, scaling]
        ElbPort: !FindInMap [NcctMap, BSIM, elbPort]
        Ec2Port: !FindInMap [NcctMap, BSIM, ec2Port]
        Protocol: !FindInMap [NcctMap, BSIM, protocol]
        ConfigFile: !FindInMap [NcctMap, BSIM, configFile]
