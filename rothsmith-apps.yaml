AWSTemplateFormatVersion: "2010-09-09"
Description: Rothsmith Applications
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Rothsmith application configuration parameters
      Parameters:
      - VPCStack
      - S3Bucket
    ParameterLabels:
      VPCStack:
        default: Enter the stack name used to create the VPC.  
      S3Bucket:
        default: Enter S3 bucket name that stores the CloudFormation templates
Parameters:
  VPCStack:
    Type: String
    Description: The VPC stack to obtain exported values from
  S3Bucket:
    Type: String
    Default: rothsmith-cloudformation
    Description: The S3 bucket containing CloudFormation templates
Mappings:
  TierMap: 
    public: 
      ami: "ami-0151f162d1ff20101"
      role: "CloudWatch"
      port: '80'
      scaling: "1,1,1"
      type: "t2.micro"
      name: Apache Web Server
      owner: drothauser@yahoo.com
      description: DMZ Apache Web Server
    private: 
      ami: "ami-07c8b576e965e389e"
      role: "CloudWatch"
      port: '8080'
      scaling: "1,1,1"
      type: "t2.micro"
      name: Tomcat Server
      owner: drothauser@yahoo.com
      description: Tomcat Server
Resources:
  Tomcat:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://s3.amazonaws.com/'
          - !Ref S3Bucket
          - '/rothsmith-service.yaml'
      Parameters:
        ElbSNs: 
          'Fn::ImportValue': 
            !Sub '${VPCStack}-PrivateSubnet'
        ElbSGs: 
          'Fn::ImportValue': 
            !Sub '${VPCStack}-PrivateSubnetInstanceSG'
        Ec2SNs: 
          'Fn::ImportValue': 
            !Sub '${VPCStack}-PrivateSubnet'
        Ec2SGs:  
          'Fn::ImportValue': 
            !Sub '${VPCStack}-PrivateSubnetInstanceSG'
        AmiId: !FindInMap [TierMap, private, ami]
        Ec2Port: !FindInMap [TierMap, private, port]
        Ec2Role: !FindInMap [TierMap, private, role]
        Ec2Type: !FindInMap [TierMap, private, type]
        Ec2Name: !FindInMap [TierMap, private, name]
        Ec2Owner: !FindInMap [TierMap, private, owner]
        Ec2Desc: !FindInMap [TierMap, private, description]        
        Facing: private
        Scaling: !FindInMap [TierMap, private, scaling]  
  PublicWeb:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://s3.amazonaws.com/'
          - !Ref S3Bucket
          - '/rothsmith-service.yaml'
      Parameters:
        ElbSNs: 
          'Fn::ImportValue': 
            !Sub '${VPCStack}-PublicSubnet'
        ElbSGs: 
          'Fn::ImportValue': 
            !Sub '${VPCStack}-PublicInstanceSG'
        Ec2SNs: 
          'Fn::ImportValue': 
            !Sub '${VPCStack}-PublicSubnet'
        Ec2SGs: 
          'Fn::ImportValue': 
            !Sub '${VPCStack}-PublicInstanceSG'
        AmiId: !FindInMap [TierMap, public, ami]
        Ec2Port: !FindInMap [TierMap, public, port]
        Ec2Role: !FindInMap [TierMap, public, role]
        Ec2Type: !FindInMap [TierMap, public, type]
        Ec2Name: !FindInMap [TierMap, public, name]
        Ec2Owner: !FindInMap [TierMap, public, owner]
        Ec2Desc: !FindInMap [TierMap, public, description]        
        Facing: public
        Scaling: !FindInMap [TierMap, public, scaling] 
        